// <auto-generated />
using Clinica.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Clinica.API.Migrations
{
    [DbContext(typeof(DataContexto))]
    [Migration("20180506172829_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("Clinica.API.Models.Especialidade", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<string>("Nome");

                    b.HasKey("ID");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("Clinica.API.Models.Medico", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("Crm")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("DataAdmissao");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime?>("DataDemissao");

                    b.Property<string>("Email");

                    b.Property<int?>("EspecialidadeID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("ID");

                    b.HasIndex("EspecialidadeID");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("Clinica.API.Models.Paciente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<DateTime?>("DataObito");

                    b.Property<DateTime?>("DataUltimaConsulta");

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<string>("Sexo");

                    b.HasKey("ID");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("Clinica.API.Models.Medico", b =>
                {
                    b.HasOne("Clinica.API.Models.Especialidade", "Especialidade")
                        .WithMany()
                        .HasForeignKey("EspecialidadeID");
                });
#pragma warning restore 612, 618
        }
    }
}
